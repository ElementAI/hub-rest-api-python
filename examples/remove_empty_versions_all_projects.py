'''
Created on Jul 18, 2018

@author: kumykov

Removes project versions that have an empty BOM

Usage:
        python3 remove_empty_versions.py projectlist.txt cleanup

Where
        projects.txt is a project list as generated by project_counts.py
        omitting cleanup parameter will execute a dry run
'''
from blackduck.HubRestApi import HubInstance
from sys import argv

hub = HubInstance()
cleanup = len(argv) > 1
total_removed = 0

def remove_empty_versions(project):
    global hub
    global cleanup
    global total_removed
    print (project['name'])
    #if project['name'] < 'honey-badger-webapp':
    #    return
    versions = hub.get_project_versions(project, limit=50)
    print ("\t** Versions found: %s" % versions['totalCount'])
    versionlist = versions['items']
    removed = 0
    for va in versionlist:
        while True:
            count = 0
            try:
                components = hub.get_version_components(va, limit=1)
                totalCount = components['totalCount']
                print ("\t\t- {} has {} components".format(va['versionName'], totalCount))
                if totalCount == 0:
                    removed += 1
                    if cleanup:
                        print ("\t\t\tremoving {}".format(va['_meta']['href']))
                        hub.execute_delete(va['_meta']['href'])
                break
            except Exception:
                count += 1
                print ("Oops! Attempt number {} failed".format(count))
                if count > 3:
                    break
                continue
            else:
                break
    print ("\t ** Removed: %s" % removed)
    total_removed += removed



#
# main
#

projects = hub.get_projects()
if 'totalCount' in projects and projects['totalCount'] > 0:
    for project in projects['items']:
        remove_empty_versions(project)

print("Total remove: {}".format(total_removed))





